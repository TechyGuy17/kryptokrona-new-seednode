name: Kryptokrona Release Pipeline

env:
  GITHUB_REGISTRY: "ghcr.io"
  GITHUB_OWNER: "kryptokrona"
  GITHUB_DOCKER_IMAGE: "kryptokrona"

on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: "Build: ${{ matrix.config.name }} / ${{ matrix.config.platform }}"
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: true
      matrix:
        config:
          - {
              name: "Ubuntu 20.04 GCC",
              artifact: "kryptokrona-ubuntu-20",
              os: ubuntu-20.04,
              cc: "gcc",
              cxx: "g++",
              platform: x64,
            }
          - {
              name: "Ubuntu 22.04 GCC",
              artifact: "kryptokrona-ubuntu-22",
              os: ubuntu-22.04,
              cc: "gcc",
              cxx: "g++",
              platform: x64,
            }
    steps:
      - uses: actions/checkout@v2

      - name: "Install ${{ matrix.config.name }} Dependencies "
        if: matrix.config.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libboost-dev libboost-all-dev libssl-dev libffi-dev python3-dev gcc-11 g++-11 git cmake librocksdb-dev cron rpcbind libboost-system1.71.0 libboost-filesystem1.71.0 libboost-thread1.71.0 libboost-date-time1.71.0 libboost-chrono1.71.0 libboost-regex1.71.0 libboost-serialization1.71.0 libboost-program-options1.71.0 libicu66

      - name: "Install ${{ matrix.config.name }} Dependencies "
        if: matrix.config.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libboost-dev libboost-all-dev libssl-dev libffi-dev python3-dev gcc-11 g++-11 git cmake librocksdb-dev cron rpcbind libboost-system1.74.0 libboost-filesystem1.74.0 libboost-thread1.74.0 libboost-date-time1.74.0 libboost-chrono1.74.0 libboost-regex1.74.0 libboost-serialization1.74.0 libboost-program-options1.74.0 libicu70

      - name: mkdir build
        if: ${{ contains(matrix.config.name, 'ubuntu') }}
        run: mkdir build

      - name: Build Ubuntu Target
        if: ${{ contains(matrix.config.name, 'ubuntu') }}
        run: |
          cmake -DBoost_ARCHITECTURE=-x64 ..
          make
        working-directory: build

      - name: Zip and Upload Ubuntu Artifact
        if: ${{ contains(matrix.config.name, 'ubuntu') }}
        run: |
          zip -r ${GITHUB_WORKSPACE}/${matrix.config.artifact}.zip \
          build/src/kryptokronad \
          build/src/xkrwallet \
          build/src/kryptokrona-service \
          build/src/miner \
          build/src/wallet-api
          echo "Zipped artifact: ${GITHUB_WORKSPACE}/${matrix.config.artifact}.zip"
        working-directory: build

      - name: Create GitHub Release
        if: ${{ contains(matrix.config.name, 'ubuntu') }}
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.config.artifact }}.zip
          repo_token: ${{ secrets.GHCR_PAT }}
          tag_name: ${{ github.ref }}
          title: Release ${{ github.ref }}
          draft: true
          prerelease: false
          overwrite: true
